package visao;

import dao.CadastrarCategoriaDao;
import java.util.ArrayList;
import modelo.CadastrarCategoria;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * Classe responsável pela interface gráfica de cadastro, edição, listagem e
 * exclusão de categorias.
 *
 * As operações realizadas são persistidas no banco de dados através da classe
 * DAO correspondente.
 *
 * @author luiz
 */
public class FrmCadastrarCategoria extends javax.swing.JFrame {

    private CadastrarCategoria objetoCadastrar;

    /**
     * Construtor da classe. Inicializa os componentes da interface e posiciona
     * a janela no centro da tela.
     */
    public FrmCadastrarCategoria() {
        initComponents();
        this.objetoCadastrar = new CadastrarCategoria();
        setLocationRelativeTo(null);

    }

    /**
     * Carrega todas as categorias cadastradas no banco de dados e exibe na
     * tabela da interface.
     */
    public void carregaTabela() {
        DefaultTableModel modelo = (DefaultTableModel) this.JTableCategoria.getModel();
        modelo.setNumRows(0);

        CadastrarCategoriaDao dao = new CadastrarCategoriaDao();
        for (CadastrarCategoria categoria : dao.getLista()) {
            modelo.addRow(new Object[]{
                categoria.getId(),
                categoria.getNome(),
                categoria.getEmbalagem(),
                categoria.getTamanho()

            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        JTextID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        JTextNome = new javax.swing.JTextField();
        JButtonCadastrar = new javax.swing.JButton();
        JButtonEditar = new javax.swing.JButton();
        JButtonExcluir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTableCategoria = new javax.swing.JTable();
        JButtonSair = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cadastrar Categoria");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jLabel1.setText("Código da categoria");

        JTextID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTextIDActionPerformed(evt);
            }
        });

        jLabel2.setText("Nome Categoria");

        JButtonCadastrar.setText("Cadastrar");
        JButtonCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JButtonCadastrarActionPerformed(evt);
            }
        });

        JButtonEditar.setText("Editar");
        JButtonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JButtonEditarActionPerformed(evt);
            }
        });

        JButtonExcluir.setText("Excluir");
        JButtonExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JButtonExcluirActionPerformed(evt);
            }
        });

        JTableCategoria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Código", "Nome Categoria", "Embalagem", "Tamanho"
            }
        ));
        JTableCategoria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JTableCategoriaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(JTableCategoria);

        JButtonSair.setText("Sair");
        JButtonSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JButtonSairActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setText("Cadastrar Categoria");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Lata", "Vidro", "Plástico" }));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pequeno", "Médio", "Grande" }));

        jLabel4.setText("Embalagem");

        jLabel5.setText("Tamanho");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(JTextID, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(JTextNome, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addGap(107, 107, 107)))
                    .addComponent(JButtonSair)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(JButtonCadastrar)
                            .addGap(93, 93, 93)
                            .addComponent(JButtonEditar)
                            .addGap(103, 103, 103)
                            .addComponent(JButtonExcluir))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel5)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(38, 38, 38)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(JTextID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(JTextNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JButtonCadastrar)
                            .addComponent(JButtonEditar)
                            .addComponent(JButtonExcluir))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(JButtonSair)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JButtonCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JButtonCadastrarActionPerformed
        /**
         * Ao clicar no botão "Cadastrar". Valida os dados inseridos, cria um
         * novo objeto de categoria e insere no banco de dados.
         *
         */
        try {
            String nome = JTextNome.getText().trim();
            String embalagem = jComboBox1.getSelectedItem().toString().trim();
            String tamanho = jComboBox2.getSelectedItem().toString().trim();

            int id;

            if (nome.length() < 2) {
                throw new Mensagem("O nome deve conter ao menos 2 caracteres.");
            }

            if (JTextID.getText().trim().isEmpty()) {
                throw new Mensagem("ID não pode estar vazio.");
            }

            try {
                id = Integer.parseInt(JTextID.getText().trim());
                if (id < 0) {
                    throw new Mensagem("ID deve ser maior que zero.");

                }
                ArrayList<CadastrarCategoria> categorias = new CadastrarCategoriaDao().getLista();

                for (CadastrarCategoria categoria : categorias) {
                    if (categoria.getId() == id) {
                        throw new Mensagem("ID " + id + " já cadastrado");

                    }
                    if (categoria.getNome().equals(nome)) {
                        throw new Mensagem("Nome " + nome + " já cadastrado");

                    }

                }
            } catch (NumberFormatException e) {
                throw new Mensagem("ID deve ser um número válido.");
            }

            this.objetoCadastrar.setId(id);
            this.objetoCadastrar.setNome(nome);
            this.objetoCadastrar.setEmbalagem(embalagem);
            this.objetoCadastrar.setTamanho(tamanho);
            CadastrarCategoriaDao dao = new CadastrarCategoriaDao();
            if (dao.inserirCategoria(this.objetoCadastrar)) {
                JOptionPane.showMessageDialog(null, "Categoria cadastrada com sucesso!");
                JTextID.setText("");
                JTextNome.setText("");
                jComboBox1.setSelectedIndex(0);
                jComboBox2.setSelectedIndex(0);
                carregaTabela();
                this.objetoCadastrar = new CadastrarCategoria();
            }

        } catch (Mensagem erro) {
            JOptionPane.showMessageDialog(null, erro.getMessage());
        }

    }//GEN-LAST:event_JButtonCadastrarActionPerformed

    private void JButtonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JButtonEditarActionPerformed
        /**
         * Ao clicar no botão "Editar". Atualiza os dados da categoria
         * selecionada com os novos valores inseridos.
         *
         */

        try {

            int id = 0;
            String nome = "";
            String embalagem = jComboBox1.getSelectedItem().toString().trim();
            String tamanho = jComboBox2.getSelectedItem().toString().trim();

            if (this.JTextNome.getText().length() < 2) {
                throw new Mensagem("Nome deve conter ao menos 2 caracteres.");
            } else {
                nome = this.JTextNome.getText();
            }

            if (this.JTableCategoria.getSelectedRow() == -1) {
                throw new Mensagem("Primeiro selecione uma categoria para editar");
            } else {
                id = Integer.parseInt(this.JTableCategoria.getValueAt(this.JTableCategoria.getSelectedRow(), 0).toString());
            }

            CadastrarCategoria categoriaAtualizada = new CadastrarCategoria(id, nome, embalagem, tamanho);
            CadastrarCategoriaDao dao = new CadastrarCategoriaDao();
            if (dao.atualizarCategoria(categoriaAtualizada)) {
                this.JTextID.setText("");
                this.JTextNome.setText("");

                // Reset JComboBoxes to their default (e.g., first item or null)
                this.jComboBox1.setSelectedIndex(0);
                this.jComboBox2.setSelectedIndex(0);

                JOptionPane.showMessageDialog(rootPane, "Categoria Alterada com Sucesso!");
            }

            System.out.println(new CadastrarCategoriaDao().getLista().toString());

        } catch (Mensagem erro) {
            JOptionPane.showMessageDialog(null, erro.getMessage());
        } catch (NumberFormatException erro2) {
            JOptionPane.showMessageDialog(null, "Informe um ID válido.");
        } finally {
            carregaTabela();
        }
    }//GEN-LAST:event_JButtonEditarActionPerformed

    private void JButtonSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JButtonSairActionPerformed
        this.dispose();
    }//GEN-LAST:event_JButtonSairActionPerformed

    private void JTableCategoriaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JTableCategoriaMouseClicked
        /**
         * Ao clicar em uma linha da tabela. Preenche os campos da interface com
         * os dados da categoria selecionada.
         */

        if (this.JTableCategoria.getSelectedRow() != -1) {
            String id = this.JTableCategoria.getValueAt(this.JTableCategoria.getSelectedRow(), 0).toString();
            String nome = this.JTableCategoria.getValueAt(this.JTableCategoria.getSelectedRow(), 1).toString();
            String embalagem = this.JTableCategoria.getValueAt(this.JTableCategoria.getSelectedRow(), 2).toString();
            String tamanho = this.JTableCategoria.getValueAt(this.JTableCategoria.getSelectedRow(), 3).toString();
            this.JTextID.setText(id);
            this.JTextNome.setText(nome);
            this.jComboBox1.setSelectedItem(embalagem);
            this.jComboBox2.setSelectedItem(tamanho);
        }

    }//GEN-LAST:event_JTableCategoriaMouseClicked

    private void JButtonExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JButtonExcluirActionPerformed
        /**
         * Ao clicar no botão "Excluir". Remove a categoria
         * selecionada da base de dados após confirmação do usuário.
         *
         * @param evt Evento de clique do botão
         */

        try {
            int id = 0;
            if (this.JTableCategoria.getSelectedRow() == -1) {
                throw new Mensagem("Primeiro selecione uma categoria para remover");
            } else {
                id = Integer.parseInt(this.JTableCategoria
                        .getValueAt(this.JTableCategoria.getSelectedRow(), 0)
                        .toString());
            }

            int respostaUsuario = JOptionPane.showConfirmDialog(
                    null,
                    "Tem certeza que deseja remover esta categoria?",
                    "Confirmação",
                    JOptionPane.YES_NO_OPTION
            );

            if (respostaUsuario == JOptionPane.YES_OPTION) {
                CadastrarCategoriaDao dao = new CadastrarCategoriaDao();
                if (dao.removerCategoria(id)) {
                    this.JTextID.setText("");
                    this.JTextNome.setText("");
                    this.jComboBox1.setSelectedIndex(0);
                    this.jComboBox2.setSelectedIndex(0);

                    JOptionPane.showMessageDialog(
                            rootPane,
                            "Categoria removida com sucesso!"
                    );
                }
            }

            CadastrarCategoriaDao dao = new CadastrarCategoriaDao();
            System.out.println(dao.getLista().toString());

        } catch (Mensagem erro) {
            JOptionPane.showMessageDialog(null, erro.getMessage());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "ID inválido");
        } finally {
            carregaTabela();
        }
    }//GEN-LAST:event_JButtonExcluirActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        carregaTabela();
    }//GEN-LAST:event_formWindowActivated

    private void JTextIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTextIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JTextIDActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmCadastrarCategoria.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmCadastrarCategoria.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmCadastrarCategoria.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmCadastrarCategoria.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmCadastrarCategoria().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JButtonCadastrar;
    private javax.swing.JButton JButtonEditar;
    private javax.swing.JButton JButtonExcluir;
    private javax.swing.JButton JButtonSair;
    private javax.swing.JTable JTableCategoria;
    private javax.swing.JTextField JTextID;
    private javax.swing.JTextField JTextNome;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
